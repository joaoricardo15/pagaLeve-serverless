{
  "swagger" : "2.0",
  "info" : {
    "description" : "PagaLeve microservice API for customers",
    "version" : "2021-06-13T15:56:16Z",
    "title" : "prod-pagaleve-serverless",
    "termsOfService" : "https://pagaleve.com",
    "contact" : {
      "name" : "Jo√£o Cardoso",
      "url" : "https://www.linkedin.com/in/jo%C3%A3o",
      "email" : "joaoricardo15@hotmail.com"
    },
    "license" : {
      "name" : "Licensing",
      "url" : "https://pagaleve.com/home"
    }
  },
  "host" : "cjzedhi6n9.execute-api.us-east-1.amazonaws.com",
  "basePath" : "/prod",
  "schemes" : [ "https" ],
  "paths" : {
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "List customers",
        "description" : "List all customers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Auth credentials",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/SuccessResponse"
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "service-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create customer",
        "description" : "Create a new customer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Auth credentials",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateCustomerModel",
          "description" : "Request body description",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateCustomerModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/SuccessResponse"
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "service-authorizer" : [ ]
        } ]
      }
    },
    "/customers/search/{queryTerm}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Search customer",
        "description" : "Search specified customers by text query",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "queryTerm",
          "in" : "path",
          "description" : "The text you want to search on customer's attributes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Auth credentials",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/SuccessResponse"
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "service-authorizer" : [ ]
        } ]
      }
    },
    "/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get customer",
        "description" : "Get a specified customer by customerId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "ID of the customer you want to get",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Auth credentials",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/SuccessResponse"
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "service-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete customer",
        "description" : "Delete a specified customer by customerId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "ID of the customer you want to delete",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Auth credentials",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/SuccessResponse"
            }
          },
          "400" : {
            "description" : "400 response",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        },
        "security" : [ {
          "service-authorizer" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "service-authorizer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "custom"
    }
  },
  "definitions" : {
    "CreateCustomerModel" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      },
      "title" : "Create customer model",
      "description" : "Create customer model"
    },
    "SuccessResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object",
          "properties" : { }
        },
        "success" : {
          "type" : "boolean"
        }
      },
      "title" : "Error model",
      "description" : "Success payload"
    },
    "ErrorResponse" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "message" : {
          "type" : "string"
        }
      },
      "title" : "Error model",
      "description" : "Error payload"
    }
  }
}